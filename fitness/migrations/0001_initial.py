# Generated by Django 4.2.8 on 2024-03-09 18:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.PositiveSmallIntegerField(choices=[(1, 'administardor'), (2, 'cliente'), (3, 'entrenador')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('tipo_ejercicio', models.CharField(choices=[('AER', 'Aer칩bico'), ('FUE', 'Fuerza o anaer칩bico'), ('FUN', 'Funcional'), ('HIT', 'Hit'), ('POT', 'Potencia')], default='HIT', max_length=3)),
                ('imagen', models.FileField(null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Entrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('duracion', models.IntegerField()),
                ('tipo', models.CharField(choices=[('RES', 'Resistencia'), ('FUE', 'Fuerza o anaer칩bico'), ('VEL', 'Velocidad'), ('HIT', 'Hit'), ('POT', 'Potencia'), ('POT', 'Potencia'), ('GAP', 'GAP'), ('ZUM', 'Zumba')], default='HIT', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='EntrenamientoPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entrenamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.entrenamiento')),
            ],
        ),
        migrations.CreateModel(
            name='Musculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PlanEntrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('duracion_estimada', models.IntegerField()),
                ('dificultad', models.CharField(max_length=20)),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_fin', models.DateTimeField(default=django.utils.timezone.now)),
                ('entrenamientos', models.ManyToManyField(through='fitness.EntrenamientoPlan', to='fitness.entrenamiento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RutinaDiaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('descripcion', models.TextField()),
                ('duracion', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Voto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntuacion', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('comentario', models.TextField()),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('u_creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Suscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(choices=[('CAI', 'Caixa'), ('BBV', 'BBVA'), ('UNI', 'Unicaja'), ('ING', 'ING Espa침a')], default='ING', max_length=3)),
                ('numero_cuenta', models.CharField(max_length=20)),
                ('titular', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeguimientoPlanEntrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_fin', models.DateTimeField(default=django.utils.timezone.now)),
                ('progreso', models.IntegerField()),
                ('plan_entrenamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.planentrenamiento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RutinaEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.ejercicio')),
                ('rutina_diaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.rutinadiaria')),
            ],
        ),
        migrations.AddField(
            model_name='rutinadiaria',
            name='ejercicios',
            field=models.ManyToManyField(through='fitness.RutinaEjercicio', to='fitness.ejercicio'),
        ),
        migrations.AddField(
            model_name='rutinadiaria',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Promocion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('descuento', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('fecha', models.DateField()),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Perfil_de_Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edad', models.IntegerField()),
                ('altura', models.FloatField()),
                ('peso', models.FloatField()),
                ('foto_perfil', models.ImageField(upload_to='imagenes/')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistorialEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('duracion', models.IntegerField(default=0)),
                ('repeticiones', models.IntegerField(default=0)),
                ('peso', models.FloatField(default=0)),
                ('calorias', models.FloatField(default=0)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.ejercicio')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GrupoMuscular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('nivel', models.CharField(choices=[('GRANDE', 'Grupos musculares grandes'), ('MEDIANO', 'Grupos musculares medianos'), ('PEQUE칌O', 'Grupos musculares peque침os')], max_length=10)),
                ('musculos', models.ManyToManyField(to='fitness.musculo')),
            ],
        ),
        migrations.CreateModel(
            name='Favoritos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.cliente')),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.ejercicio')),
            ],
        ),
        migrations.AddField(
            model_name='entrenamientoplan',
            name='plan_entrenamiento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.planentrenamiento'),
        ),
        migrations.CreateModel(
            name='EntrenamientoEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeticiones', models.IntegerField(default=0)),
                ('peso_utilizado', models.FloatField(default=0)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.ejercicio')),
                ('entrenamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.entrenamiento')),
            ],
        ),
        migrations.AddField(
            model_name='entrenamiento',
            name='ejercicios',
            field=models.ManyToManyField(through='fitness.EntrenamientoEjercicio', to='fitness.ejercicio'),
        ),
        migrations.AddField(
            model_name='entrenamiento',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Entrenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ejercicio',
            name='grupos_musculares',
            field=models.ManyToManyField(to='fitness.grupomuscular'),
        ),
        migrations.AddField(
            model_name='ejercicio',
            name='usuarios',
            field=models.ManyToManyField(through='fitness.HistorialEjercicio', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('entrenamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.entrenamiento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cliente',
            name='ejercicios_favoritos',
            field=models.ManyToManyField(related_name='ejercicios_favoritos_cliente', through='fitness.Favoritos', to='fitness.ejercicio'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CategoriaEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('ejercicios', models.ManyToManyField(to='fitness.ejercicio')),
            ],
        ),
    ]
